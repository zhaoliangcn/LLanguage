#ifndef _H_SCPOBJECT_UNI
#define _H_SCPOBJECT_UNI

#include <string>
#include "../Common/stdstringext.hpp"

typedef unsigned short ScpObjectType;

const static ScpObjectType	ObjUnknown = 0;
const static ScpObjectType	ObjFile = 2;
const static ScpObjectType  ObjCode = 6;
const static ScpObjectType	ObjMsgBox = 7;
const static ScpObjectType	ObjProc = 8;
const static ScpObjectType	ObjScript = 9;
const static ScpObjectType	ObjString = 10;
const static ScpObjectType	ObjNumber = 11;
const static ScpObjectType	ObjMemory = 12;
const static ScpObjectType	ObjState = 13;
const static ScpObjectType	ObjResult = 14;
const static ScpObjectType	ObjFunction = 15;
const static ScpObjectType	ObjInt = 16;
const static ScpObjectType	ObjDouble = 17;
const static ScpObjectType	ObjExpression = 18;
const static ScpObjectType	ObjTable = 19;
const static ScpObjectType	ObjElement = 20;
const static ScpObjectType	ObjRegExp = 21;
const static ScpObjectType	ObjClass = 22;
const static ScpObjectType	ObjClassMember = 23;
const static ScpObjectType	ObjLib = 24;
const static ScpObjectType	ObjMap = 25;
const static ScpObjectType	ObjThreeElementMap = 26;
const static ScpObjectType	ObjNull = 27;
const static ScpObjectType	ObjEnum = 28;
const static ScpObjectType	ObjPointer = 29;
const static ScpObjectType	ObjHandle = 30;
const static ScpObjectType	ObjCInt32 = 31;
const static ScpObjectType	ObjPointerofChar = 32;
const static ScpObjectType	ObjPointerofWchar = 33;
const static ScpObjectType	ObjUnsignedInt32 = 34;
const static ScpObjectType	ObjCFunction = 35;
const static ScpObjectType	ObjGlobalCommand = 36;
const static ScpObjectType	ObjTime = 39;
const static ScpObjectType	ObjCurrentTime = 40;
const static ScpObjectType	ObjPicture = 42;
const static ScpObjectType	ObjVideo = 44;
const static ScpObjectType	ObjDirectory = 45;
const static ScpObjectType	ObjUserinput = 48;
const static ScpObjectType	ObjSubDir = 50;
const static ScpObjectType	ObjStringArray = 51;
const static ScpObjectType	ObjRandomNumber = 52;
const static ScpObjectType	ObjClassInstance = 54;
const static ScpObjectType	ObjAttribute = 55;
const static ScpObjectType	ObjEnvironmentVariable = 56;
const static ScpObjectType	ObjJson = 59;
const static ScpObjectType	ObjCChar = 61;
const static ScpObjectType	ObjCUnsignedChar = 62;
const static ScpObjectType	ObjVoid = 63;
const static ScpObjectType	ObjExtensionModule = 65;
const static ScpObjectType	ObjStruct = 66;
const static ScpObjectType	ObjCShort = 68;
const static ScpObjectType	ObjCUnsignedShort = 69;
const static ScpObjectType	ObjCLong = 70;
const static ScpObjectType	ObjCUnsignedLong = 71;
const static ScpObjectType	ObjExpressions = 73;
const static ScpObjectType	ObjArray = 74;
const static ScpObjectType	ObjWhileStatement = 75;
const static ScpObjectType	ObjStaticInt = 76;
const static ScpObjectType	ObjStaticDouble = 77;
const static ScpObjectType	ObjStaticString = 78;
const static ScpObjectType	ObjIfStatement = 79;
const static ScpObjectType	ObjStructInstance = 83;
const static ScpObjectType	ObjBigInt = 84;
const static ScpObjectType	ObjExpressionNode = 90;
const static ScpObjectType	ObjExpressionBlock = 91;
const static ScpObjectType  ObjStack = 92;
const static ScpObjectType  ObjQueue = 93;
const static ScpObjectType  ObjExt = 94;
const static ScpObjectType  ObjList = 95;
const static ScpObjectType  ObjRange = 96;


const static wchar_t* str_CN_ObjFile = L"文件";
const static wchar_t* str_CN_ObjCode = L"代码";
const static wchar_t* str_CN_ObjMsgBox = L"消息框";
const static wchar_t* str_CN_ObjProc = L"进程";
const static wchar_t* str_CN_ObjProc1 = L"程序";
const static wchar_t* str_CN_ObjScript = L"脚本";
const static wchar_t* str_CN_ObjString = L"字符串";
const static wchar_t* str_CN_ObjStringArray = L"字符串数组";
const static wchar_t* str_CN_ObjNumber = L"数值";
const static wchar_t* str_CN_ObjMemory = L"内存";
const static wchar_t* str_CN_ObjObjState = L"状态";
const static wchar_t* str_CN_ObjResult = L"结果";
const static wchar_t* str_CN_ObjFunction = L"函数";
const static wchar_t* str_CN_ObjInt = L"整数";
const static wchar_t* str_CN_ObjDouble = L"浮点数";
const static wchar_t* str_CN_ObjExpression = L"算式";
const static wchar_t* str_CN_ObjTable = L"表";
const static wchar_t* str_CN_ObjStack = L"栈";
const static wchar_t* str_CN_ObjQueue = L"队列";
const static wchar_t* str_CN_ObjList = L"列表";
const static wchar_t* str_CN_ObjRange = L"范围";
const static wchar_t* str_CN_ObjElement = L"元素";
const static wchar_t* str_CN_ObjRegExp = L"正则表达式";
const static wchar_t* str_CN_ObjClass = L"类";
const static wchar_t* str_CN_ObjClassInstance = L"类实例";
const static wchar_t* str_CN_ObjClassMember = L"成员";
const static wchar_t* str_CN_ObjLib = L"库";
const static wchar_t* str_CN_ObjMap = L"映射";
const static wchar_t* str_CN_ObjThreeElementMap = L"三元映射";
const static wchar_t* str_CN_ObjNull = L"空";
const static wchar_t* str_CN_ObjEnum = L"枚举值";
const static wchar_t* str_CN_ObjVoid = L"无";
const static wchar_t* str_CN_ObjBigInt = L"大整数";
const static wchar_t* str_CN_ObjPointer = L"指针";
const static wchar_t* str_CN_ObjHandle = L"句柄";
const static wchar_t* str_CN_ObjCInt32 = L"C整数";
const static wchar_t* str_CN_ObjPointerofChar = L"C字符指针";
const static wchar_t* str_CN_ObjPointerofWchar = L"C宽字符指针";
const static wchar_t* str_CN_ObjUnsignedInt32 = L"C无符号整数";
const static wchar_t* str_CN_ObjCFunction = L"C函数";
const static wchar_t* str_CN_ObjCChar = L"C字符";
const static wchar_t* str_CN_ObjCUnsignedChar = L"C无符号字符";
const static wchar_t* str_CN_ObjCShort = L"C短整型";
const static wchar_t* str_CN_ObjCUnsignedShort = L"C无符号短整型";
const static wchar_t* str_CN_ObjCLong = L"C长整型";
const static wchar_t* str_CN_ObjCUnsignedLong = L"C无符号长整型";
const static wchar_t* str_CN_ObjGlobalCommand = L"全局命令";
const static wchar_t* str_CN_ObjDll = L"动态库";
const static wchar_t* str_CN_ObjExtObj = L"扩展对象";
const static wchar_t* str_CN_ObjTime = L"时间";
const static wchar_t* str_CN_ObjCurrentTime = L"当前时间";
const static wchar_t* str_CN_ObjPicture = L"图片";
const static wchar_t* str_CN_ObjVideo = L"视频";
const static wchar_t* str_CN_ObjDirectory = L"目录";
const static wchar_t* str_CN_ObjSubDir = L"子目录";
const static wchar_t* str_CN_ObjUserinput = L"用户输入";
const static wchar_t* str_CN_ObjRandomNumber = L"随机数";
const static wchar_t* str_CN_ObjEnvironmentVariable = L"环境变量";
const static wchar_t* str_CN_ObjJson = L"JSON";
const static wchar_t* str_CN_ObjValue = L"值";
const static wchar_t* str_CN_ObjAttribute = L"属性";
const static wchar_t* str_CN_ObjExtensionModule = L"扩展";
const static wchar_t* str_CN_ObjStruct = L"结构体";
const static wchar_t* str_CN_ObjStructInstance = L"结构体实例";
const static wchar_t* str_CN_ObjExpressions = L"表达式";
const static wchar_t* str_CN_ObjArray = L"数组";
const static wchar_t* str_CN_ObjWhileStatement = L"循环";
const static wchar_t* str_CN_ObjType = L"类型";
const static wchar_t* str_CN_ObjStaticInt = L"静态整数";
const static wchar_t* str_CN_ObjStaticDouble = L"静态浮点数";
const static wchar_t* str_CN_ObjStaticString = L"静态字符串";
const static wchar_t* str_CN_ObjIfStatement = L"条件语句";
const static wchar_t* str_CN_ObjMainFunction = L"主函数";
const static wchar_t* str_CN_ScpStateEqual = L"相等";
const static wchar_t* str_CN_ScpStateNotEqual = L"不相等";
const static wchar_t* str_CN_ScpStateBig = L"大于";
const static wchar_t* str_CN_ScpStateLess = L"小于";
const static wchar_t* str_CN_ScpStateTrue = L"真";
const static wchar_t* str_CN_ScpStateFalse = L"假";
const static wchar_t* str_CN_ScpStateMatched = L"匹配";
const static wchar_t* str_CN_ScpStateNotMatched = L"不匹配";
const static wchar_t* str_CN_ScpStateFind = L"找到";
const static wchar_t* str_CN_ScpStateNotFind = L"没找到";
const static wchar_t* str_CN_ScpMessageCaption = L"消息";
const static wchar_t* str_CN_Hour = L"时";
const static wchar_t* str_CN_Minute = L"分";
const static wchar_t* str_CN_Second = L"秒";
const static wchar_t* str_CN_scpStringUpper = L"大写";
const static wchar_t* str_CN_scpStringLower = L"小写";
const static wchar_t* str_CN_scpStringReverse = L"反转";
const static wchar_t* str_CN_scpStringHex = L"十六进制";
const static wchar_t* str_CN_Global = L"全局";
const static wchar_t* str_CN_ObjPid = L"PID";
const static wchar_t* str_CN_CommandParameter = L"命令行参数";
const static wchar_t* str_CN_CurrentScriptFile = L"当前脚本文件";
const static wchar_t* str_CN_CurrentScriptPath = L"当前脚本路径";
const static wchar_t* str_CN_ObjCurrentDirectory = L"当前目录";
const static wchar_t* str_CN_ObjCallStack = L"调用堆栈";
const static wchar_t* str_CN_ObjPackage = L"包";
const static wchar_t* str_CN_ObjFileLine = L"行";
const static wchar_t* str_CN_ScpDoubleQuoteLeftcn = L"“";
const static wchar_t* str_CN_ScpDoubleQuoteRightcn = L"”";
const static wchar_t* str_CN_ScpColoncn = L"：";
const static wchar_t* str_CN_ScpCommacn = L"，";
const static wchar_t* str_CN_ScpLeftParenthesescn = L"（";
const static wchar_t* str_CN_ScpRightParenthesescn = L"）";


const static wchar_t* str_EN_ObjFile = L"file";
const static wchar_t* str_EN_ObjCode = L"code";
const static wchar_t* str_EN_ObjMsgBox = L"messagebox";
const static wchar_t* str_EN_ObjProc = L"process";
const static wchar_t* str_EN_ObjProc1 = L"proc";
const static wchar_t* str_EN_ObjScript = L"script";
const static wchar_t* str_EN_ObjString = L"string";
const static wchar_t* str_EN_ObjStringArray = L"stringarray";
const static wchar_t* str_EN_ObjNumber = L"number";
const static wchar_t* str_EN_ObjMemory = L"memory";
const static wchar_t* str_EN_ObjObjState = L"state";
const static wchar_t* str_EN_ObjResult = L"result";
const static wchar_t* str_EN_ObjFunction = L"function";
const static wchar_t* str_EN_ObjInt = L"int";
const static wchar_t* str_EN_ObjDouble = L"double";
const static wchar_t* str_EN_ObjExpression = L"expression";
const static wchar_t* str_EN_ObjTable = L"table";
const static wchar_t* str_EN_ObjStack = L"stack";
const static wchar_t* str_EN_ObjQueue = L"queue";
const static wchar_t* str_EN_ObjList = L"list";
const static wchar_t* str_EN_ObjRange = L"range";
const static wchar_t* str_EN_ObjElement = L"element";
const static wchar_t* str_EN_ObjRegExp = L"regexp";
const static wchar_t* str_EN_ObjClass = L"class";
const static wchar_t* str_EN_ObjClassInstance = L"classinstance";
const static wchar_t* str_EN_ObjClassMember = L"member";
const static wchar_t* str_EN_ObjLib = L"library";
const static wchar_t* str_EN_ObjMap = L"map";
const static wchar_t* str_EN_ObjThreeElementMap = L"threeelementmap";
const static wchar_t* str_EN_ObjNull = L"null";
const static wchar_t* str_EN_ObjEnum = L"enum";
const static wchar_t* str_EN_ObjVoid = L"void";
const static wchar_t* str_EN_ObjBigInt = L"int64";
const static wchar_t* str_EN_ObjSmtpClient = L"smtpclient";
const static wchar_t* str_EN_ObjPointer = L"pointer";
const static wchar_t* str_EN_ObjHandle = L"handle";
const static wchar_t* str_EN_ObjCInt32 = L"Cint";
const static wchar_t* str_EN_ObjPointerofChar = L"Cpchar";
const static wchar_t* str_EN_ObjPointerofWchar = L"Cpwchar";
const static wchar_t* str_EN_ObjUnsignedInt32 = L"Cuint";
const static wchar_t* str_EN_ObjCFunction = L"Cfunction";
const static wchar_t* str_EN_ObjCChar = L"Cchar";
const static wchar_t* str_EN_ObjCUnsignedChar = L"Cunsignedchar";
const static wchar_t* str_EN_ObjCShort = L"Cshort";
const static wchar_t* str_EN_ObjCUnsignedShort = L"Cunsignedshort";
const static wchar_t* str_EN_ObjCLong = L"Clong";
const static wchar_t* str_EN_ObjCUnsignedLong = L"Cunsignedlong";
const static wchar_t* str_EN_ObjGlobalCommand = L"globalcommand";
const static wchar_t* str_EN_ObjDll = L"dll";
const static wchar_t* str_EN_ObjExtObj = L"extobj";
const static wchar_t* str_EN_ObjTime = L"time";
const static wchar_t* str_EN_ObjCurrentTime = L"currenttime";
const static wchar_t* str_EN_ObjPicture = L"picture";
const static wchar_t* str_EN_ObjVideo = L"video";
const static wchar_t* str_EN_ObjDirectory = L"directory";
const static wchar_t* str_EN_ObjSubDir = L"subdirectory";
const static wchar_t* str_EN_ObjUserinput = L"userinput";
const static wchar_t* str_EN_ObjRandomNumber = L"randomnumber";
const static wchar_t* str_EN_ObjEnvironmentVariable = L"environmentvariable";
const static wchar_t* str_EN_ObjJson = L"json";
const static wchar_t* str_EN_ObjValue = L"value";
const static wchar_t* str_EN_ObjAttribute = L"attribute";
const static wchar_t* str_EN_ObjExtensionModule = L"extensionmodule";
const static wchar_t* str_EN_ObjStruct = L"struct";
const static wchar_t* str_EN_ObjStructInstance = L"structinstance";
const static wchar_t* str_EN_ObjExpressions = L"expressions";
const static wchar_t* str_EN_ObjArray = L"array";
const static wchar_t* str_EN_ObjWhileStatement = L"while";
const static wchar_t* str_EN_ObjType = L"type";
const static wchar_t* str_EN_ObjStaticInt = L"staticint";
const static wchar_t* str_EN_ObjStaticDouble = L"staticdouble";
const static wchar_t* str_EN_ObjStaticString = L"staticstring";
const static wchar_t* str_EN_ObjIfStatement = L"if";
const static wchar_t* str_EN_ObjMainFunction = L"main";
const static wchar_t* str_EN_ScpStateEqual = L"equal";
const static wchar_t* str_EN_ScpStateNotEqual = L"notequal";
const static wchar_t* str_EN_ScpStateBig = L"big";
const static wchar_t* str_EN_ScpStateLess = L"lessthan";
const static wchar_t* str_EN_ScpStateTrue = L"true";
const static wchar_t* str_EN_ScpStateFalse = L"false";
const static wchar_t* str_EN_ScpStateMatched = L"matched";
const static wchar_t* str_EN_ScpStateNotMatched = L"notmatched";
const static wchar_t* str_EN_ScpStateFind = L"finded";
const static wchar_t* str_EN_ScpStateNotFind = L"notfinded";
const static wchar_t* str_EN_ScpMessageCaption = L"message";
const static wchar_t* str_EN_Hour = L"hour";
const static wchar_t* str_EN_Minute = L"minute";
const static wchar_t* str_EN_Second = L"second";
const static wchar_t* str_EN_scpStringUpper = L"upper";
const static wchar_t* str_EN_scpStringLower = L"lower";
const static wchar_t* str_EN_scpStringReverse = L"reverse";
const static wchar_t* str_EN_scpStringHex = L"hex";
const static wchar_t* str_EN_Global = L"global";
const static wchar_t* str_EN_ObjPid = L"pid";
const static wchar_t* str_EN_CommandParameter = L"commandparameter";
const static wchar_t* str_EN_CurrentScriptFile = L"currentscriptfile";
const static wchar_t* str_EN_CurrentScriptPath = L"currentscriptpath";
const static wchar_t* str_EN_ObjCurrentDirectory = L"currentdirectory";
const static wchar_t* str_EN_ObjCallStack = L"callstack";
const static wchar_t* str_EN_ObjPackage = L"package";
const static wchar_t* str_EN_ObjFileLine = L"line";
const static wchar_t* str_EN_ScpDoubleQuoteLeftcn = L"\"";
const static wchar_t* str_EN_ScpDoubleQuoteRightcn = L"\"";
const static wchar_t* str_EN_ScpColoncn = L":";
const static wchar_t* str_EN_ScpCommacn = L",";
const static wchar_t* str_EN_ScpLeftParenthesescn = L"(";
const static wchar_t* str_EN_ScpRightParenthesescn = L")";

#endif //_H_SCPOBJECT_UNI